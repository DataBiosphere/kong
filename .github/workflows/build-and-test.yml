name: Build and Test

on:
  push:
    branches: [ dev ]
    paths-ignore: [ '*.md' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Rather than specifying the health check here, we do it manually later to give Postgres
        # time to start while we restore dependencies.

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Make sure Postgres is ready and init
        env:
          PGPASSWORD: postgres
        run: |
          pg_isready -h localhost -t 10
          psql -h localhost -U postgres -f ./common/postgres-init.sql

      - name: Build and test with coverage
        run: ./gradlew build jacocoTestReport

      - name: Codecov
        uses: codecov/codecov-action@v2.0.2
        with:
          files: ./service/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: service/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: service/build/reports/spotbugs/main.sarif

      - name: Build image locally with jib
        # build the docker image to make sure it does not error
        run: './gradlew :service:jibDockerBuild -Djib.console=plain'

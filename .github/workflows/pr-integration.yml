# Action for running client integration tests against PRs. This test uses local
# server changes but runs a published version of the client, so it will not pick
# up local client changes.

name: PR Integration Tests
on:
  push:
    branches: [ dev ]
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - 'service/local-dev/**'
  pull_request:
    branches: [ '**' ]
    # This is a required check for all PRs, so don't add a paths-ignore here.
    # We want this to always run so that the check passes.
jobs:
  pr-integration-job:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Give Postgres time to start by doing the health check later.

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Make sure Postgres is ready and init
        env:
          PGPASSWORD: postgres
        run: |
          pg_isready -h localhost -t 10
          psql -h localhost -U postgres -f ./common/postgres-init.sql

      - name: Get Vault token
        id: vault-token
        env:
          VAULT_ADDR: https://clotho.broadinstitute.org:8200
        run: |
          VAULT_TOKEN=$(docker run --rm --cap-add IPC_LOCK \
            -e "VAULT_ADDR=${VAULT_ADDR}" \
            vault:1.1.0 \
            vault write -field token \
              auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} \
              secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }})
          echo ::set-output name=vault-token::$VAULT_TOKEN
          echo ::add-mask::$VAULT_TOKEN

      - name: Read configs from vault
        run: ./render_config.sh dev ${{ inputs.vault-token }}

      - name: Launch local server
        uses: ./.github/actions/start-local-server

      - name: Run the integration test suite
        id: integration-test
        run: |
          cd integration
          resultsDir=/tmp/results$RANDOM
          echo "Running the FullIntegration test suite"
          ../gradlew :integration:runTest --args="suites/FullIntegration.json $resultsDir" --scan
          testResult=$?
          echo "Test result is $testResult"
          exit $testResult

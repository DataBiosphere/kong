configurations { compileOnly { extendsFrom annotationProcessor } }

dependencies {
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
	developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-cache:$springBootVersion"
	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
	implementation "org.springframework.security:spring-security-oauth2-core:$springSecurityVersion"
	implementation ("org.springframework.security:spring-security-oauth2-client:$springSecurityVersion") {
		// Need to exclude this because its strictly tied to a vulnerable version.
		exclude group: 'net.minidev', module: 'json-smart'
	}
	implementation('net.minidev:json-smart:2.4.10')
	implementation "org.springframework.security:spring-security-oauth2-jose:$springSecurityVersion"
	implementation 'org.springframework.retry:spring-retry:1.3.2'

	// allows mocking final classes
	testImplementation 'org.mockito:mockito-inline:4.0.0'

	// DB deps (still versioned by Spring):
	implementation 'org.liquibase:liquibase-core:4.8.0'
	runtimeOnly 'org.postgresql:postgresql:42.3.7'
}

test { useJUnitPlatform() }

def googleCredentialsFile = "${rootDir}/service/src/main/resources/rendered/ecm-sa.json"
bootRun {
	environment.put("GOOGLE_APPLICATION_CREDENTIALS", "${googleCredentialsFile}")
}

task bootRunDev {
	bootRun.configure { systemProperty 'spring.profiles.active', 'human-readable-logging' }
	finalizedBy(bootRun)
}

springBoot {
	mainClass = 'bio.terra.externalcreds.ExternalCredsWebApplication'
}


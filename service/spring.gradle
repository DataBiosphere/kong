configurations { compileOnly { extendsFrom annotationProcessor } }

// All version controlled by dependency management plugin
dependencies {
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework:spring-aop'
	implementation 'org.springframework:spring-aspects'

	implementation 'org.springframework.security:spring-security-oauth2-core'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.retry:spring-retry'


	// allows mocking final classes
	testImplementation 'org.mockito:mockito-inline:5.2.0'

	// DB deps (still versioned by Spring):
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'
}

test { useJUnitPlatform() }

def googleCredentialsFile = "${rootDir}/service/src/main/resources/rendered/ecm-sa.json"
bootRun {
	environment.put("GOOGLE_APPLICATION_CREDENTIALS", "${googleCredentialsFile}")
}

task bootRunDev {
	bootRun.configure { systemProperty 'spring.profiles.active', 'human-readable-logging' }
	finalizedBy(bootRun)
}

springBoot {
	mainClass = 'bio.terra.externalcreds.ExternalCredsWebApplication'
}

